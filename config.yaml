SYSTEM:
  ETE_LATENCY_THRESHOLD: 5
  DATA_DIR: '/home/ubuntu/scg/config/'
  BS_FILE: 'base_stations.json'
  MEC_FILE: 'mecs.json'
  HMDS_FILE: 'hmds.json'
  RESULTS_DIR: '/home/ubuntu/scg/results/'
  SERVICE_PER_USER: 60
  #SERVICE_PER_USER: Bern -> 10, 20, 30 | Geneva -> 25, 35, 45 | Zurich -> 50, 55, 60
# variables for mininet-wifi 
NETWORK:
  HMDS: 100
  BASE_STATIONS: 100
  NETWORK_FILE: zurich_r_022.json
  NETWORK_FILE_DIR: /home/ubuntu/scg/network/topologies/zurich/ 
  NET_GRAPH_DIMENSION: 2000
  HMD_MIN_VELOCITY: 1000
  HMD_MAX_VELOCITY: 1500
  BS_CHANNEL: 1
  BS_RANGE: 500
  BS_MODE: 'g'
  BS_TX_POWER: 76
  LOWER_LATENCY_THRESHOLD: 0.5 
  UPPER_LATENCY_THRESHOLD: 1   

# variables for mininet connection with ONOS controller
SDN:
  PORT: 6653
  PROTOCOLS: 'OpenFlow13'


MIGRATION:  
  ALGORITHMS: 5
  SCG:
    LATENCY_CHECK: False

MEC_SERVERS:
  GPU_LAM: 110
  CPU_LAM: 200
  OVERALL_MECS: 100
  MECS_WITHOUT_GPUS: 8
  LOWER_LATENCY_THRESHOLD: 3
  UPPER_LATENCY_THRESHOLD: 6
  INIT_RESOURCE_LOAD: 0.9 

HMDS:
  LOWER_LATENCY_THRESHOLD: 4
  UPPER_LATENCY_THRESHOLD: 7

SERVICES:
  VIDEO_RESOLUTION:
    LATENCY_THRESOLDS:
      8k: 3.5
      4k: 4
      2k: 4.5

ONOS: #TODO: each yaml key can receive the value of the wrapped variable from the system environment just with key: ${SYSTEM_VARIABLE_NAME}
  FILE_DIR: '/home/ubuntu/'
  FILE: 'SCG_ONOS_VARIABLES.sh'
  IP: SERVER_IP
  PORT: OF_PORT
  USER: ONOS_USER
  PASS: PASSWORD

